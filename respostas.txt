RESPOSTAS

Questao 01 - A
Questao 02 - D
Questao 03 - C
Questao 04 - B
Questao 05 - A
Questao 06 - C
Questao 07 - E

Questao 08

package savio;

public class Questao08 {
	
	public static void main(String[] args) {
		int a = 10256;
		int b = 512;
		int c = getValorC(a, b);
		System.out.println(c);
	}

	private static int getValorC(int a, int b) {
		StringBuilder stringC = new StringBuilder();
		int numeroMaior = getNumeroMaior(a, b);
		int numeroMenor = getNumeroMenor(numeroMaior, a, b);
		int tamanhoNumeroMenor = String.valueOf(numeroMenor).length();
		int range = tamanhoNumeroMenor + 1;
		for (int index = 1; index < range; index++) {
			int i = index - 1;
			stringC.append(String.valueOf(a).substring(i, index));
			stringC.append(String.valueOf(b).substring(i, index));
		}
		String stringNumeroMaior = String.valueOf(numeroMaior);
		stringC.append(stringNumeroMaior.substring(tamanhoNumeroMenor, stringNumeroMaior.length()));
		if (Long.valueOf(stringC.toString()) > Integer.MAX_VALUE || Integer.valueOf(stringC.toString()) > 1000000) {
			return -1;
		}
		return Integer.valueOf(stringC.toString());
	}

	private static int getNumeroMenor(int numeroMaior, int a, int b) {
		if (numeroMaior == a) {
			return b;
		}
		return a;
	}

	private static int getNumeroMaior(int a, int b) {
		int tamanhoA = String.valueOf(a).length();
		int tamanhoB = String.valueOf(b).length();
		if (tamanhoA > tamanhoB) {
			return a;
		}
		return b;
	}

}

Questao 09 

package savio;

public class Questao09 {
	
	public static void main(String[] args) {
		
		BinaryTree root = new BinaryTree();
		
		BinaryTree no01 = new BinaryTree();
		no01.valor = 40;
		root.right = no01;
		no01.left = root;
		
		BinaryTree no02 = new BinaryTree();
		no02.valor = 10;
		no01.right = no02;
		no02.left = no01;
		
		BinaryTree no03 = new BinaryTree();
		no03.valor = 11;
		no02.right = no03;
		no03.left = no02;
		
		BinaryTree no04 = new BinaryTree();
		no04.valor = 44;
		no03.right = no04;
		no04.left = no03;
		
		int somatorio = root.somatorio(no04, 0);
		System.out.println(somatorio);

	}
	
}

package savio;

public class BinaryTree {

	int valor;

	BinaryTree left;

	BinaryTree right;

	public int somatorio(BinaryTree binaryTree, int valor) {
		if (binaryTree != null) {
			int somatorio = binaryTree.valor + valor;
			return somatorio(binaryTree.right, somatorio);
		}
		return valor;
	}

}